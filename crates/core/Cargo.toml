[package]
name = "rings-core"
description = "Chord DHT implementation with ICE"
readme = "README.md"
keywords = ["Chord", "DHT", "Web3", "P2P", "WASM"]
categories = ["network-programming", "cryptography", "wasm"]
version.workspace = true
edition.workspace = true
license.workspace = true
authors.workspace = true
repository.workspace = true

[features]
# Feature "experimental" is used to mark an implementation as experimental, which means that:
# It may not have been thoroughly tested.
# The corresponding API may be deprecated or adjusted in the future.
experimental = ["std"]
default = ["std"]
redundant = ["default"]
std = [
    "webrtc",
    "sled",
    "uuid/v4",
    "uuid/serde",
    "rings-derive/default",
    "rings-transport/native-webrtc",
]
dummy = ["std", "lazy_static", "tokio", "rings-transport/dummy"]
wasm = [
    "web-sys",
    "wasm-bindgen",
    "js-sys",
    "wasm-bindgen-futures",
    "rexie",
    "serde-wasm-bindgen",
    "uuid/wasm-bindgen",
    "uuid/v4",
    "uuid/serde",
    "rings-derive/wasm",
    "rings-transport/web-sys-webrtc",
]
browser_chrome_test = ["wasm"]

[dependencies]
# global
ark-bls12-381 = "0.4.0"
ark-ec = "0.4.2"
ark-ff = "0.4.2"
ark-serialize = "0.4.2"
ark-std = "0.4.0"
arrayref = "0.3.6"
async-lock = "2.5.0"
async-recursion = "1.0.0"
async-stream = "0.3.2"
async-trait = { workspace = true }
base58 = "0.2.0"
base58-monero = { version = "0.3", default-features = false, features = ["check"] }
bincode = "1.3.3"
bytes = { version = "1.2.1", features = ["serde"] }
chrono = { version = "0.4.19", features = ["wasmbind"] }
dashmap = "5"
derivative = "2.2.0"
ecdsa = { version = "0.16.6", features = ["signing"] }
ecies = { version = "0.2.9", default-features = false, features = ["pure", "std"] }
ed25519 = "1.5.2"
ed25519-dalek = "1.0.1"
elliptic-curve = "0.13.6"
ethereum-types = "0.14.1"
flate2 = "1.0.22"
futures = "0.3.21"
futures-timer = "3.0.2"
hex = "0.4.3"
itertools = "0.10.3"
libsecp256k1 = "0.7.0"
num-bigint = "0.4.3"
p256 = "0.13.2"
primeorder = "0.13.2"
rand = { version = "0.8.5", features = ["getrandom"] }
rand_core = { version = "0.6.3", features = ["getrandom"] }
rand_hc = "0.3.1"
rings-transport = { workspace = true }
serde = { version = "1.0.130", features = ["derive"] }
serde_json = "1.0.70"
sha1 = "0.10.1"
sha2 = "0.10.6"
subtle = "2.4.1"
thiserror = "1"
tracing = "0.1.37"
url = { version = "2", features = ["serde"] }

rings-derive = { workspace = true, optional = true, features = ["core_crate"] }
tiny-keccak = { version = "2.0.1", features = ["keccak"] }
uuid = { version = "0.8.2", optional = true }

# default and dummy
sled = { version = "0.34.7", optional = true }
webrtc = { workspace = true, optional = true }

# dummy
lazy_static = { version = "1.4.0", optional = true }
tokio = { version = "1.13.0", features = ["full"], optional = true }

# wasm
js-sys = { workspace = true, optional = true }
rexie = { version = "0.4.2", optional = true }
serde-wasm-bindgen = { workspace = true, optional = true }
wasm-bindgen = { workspace = true, optional = true }
wasm-bindgen-futures = { workspace = true, optional = true }
web-sys = { version = "0.3.56", optional = true, features = [
    "MediaDevices",
    "Navigator",
    "ServiceWorkerGlobalScope",
    "Window",
    "MediaStreamConstraints",
    "WorkerGlobalScope",
] }

[dev-dependencies]
pretty_assertions = "1.4.0"
tracing-subscriber = { version = "0.3.15", features = ["ansi"] }
tracing-test = "0.2.4"
tracing-wasm = "0.2.1"
wasm-bindgen-test = { workspace = true }

[target.'cfg(not(target_family="wasm"))'.dev-dependencies]
tokio = { version = "1.47", features = ["full"] }
